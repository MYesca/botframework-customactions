# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
#
# Builds, deploys and configures the bot's dotnet web app
# 

parameters:
- name: azureServiceConnection
  displayName: Azure Service Connection
  type: string

- name: webAppName
  displayName: Azure web app name
  type: string

- name: resourceGroupName
  displayName: Resource group
  type: string

- name: botProjectFile
  displayName: Bot project to build and deploy
  type: string

steps:
# Build bot
# Note: this step also packages the generated folder created by the buildAndDeployModels yaml script.
# https://stackoverflow.com/questions/63788646/naming-resulting-zip-archive-in-azure-pipelines-build
- task: DotNetCoreCLI@2
  displayName: "Build the bot publishing package"
  inputs:
    command: "publish"
    projects: "${{ parameters.botProjectFile }}"
    publishWebProjects: false #setting it to false to make sure only this csproj gets compiled and published.
    arguments: "--output $(System.DefaultWorkingDirectory)/output/zipDeploy"
    zipAfterPublish: True

# Publish output artifacts to Azure DevOps
- task: PublishBuildArtifacts@1
  displayName: "Publish build artifacts"
  inputs:
    pathtoPublish: "$(System.DefaultWorkingDirectory)/output/zipDeploy" 
    artifactName: "BuildArtifacts-$(Build.BuildId)"

# Deploy the web app to azure
- task: AzureWebApp@1
  displayName: "Deploy Azure Web App: ${{ parameters.webAppName }}"
  inputs:
    azureSubscription: ${{ parameters.azureServiceConnection }}
    appName: "${{ parameters.webAppName }}"
    resourceGroupName: "${{ parameters.resourceGroupName }}"
    package: "$(System.DefaultWorkingDirectory)/output/zipDeploy/${{ parameters.webAppName }}.zip"
    deploymentMethod: zipDeploy
